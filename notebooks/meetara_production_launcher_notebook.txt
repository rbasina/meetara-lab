# Cell 1: Markdown
# MeeTARA Lab - Production Training Launcher
## ðŸš€ Trinity Architecture GPU Training for All 62 Domains

This notebook runs the production launcher script to train all 62 domains using Google Colab's GPU.

### Performance Targets:
- **T4 GPU**: 37x faster than CPU
- **V100 GPU**: 75x faster than CPU
- **A100 GPU**: 151x faster than CPU
- **Quality**: 101% validation scores
- **Budget**: <$50/month for all domains

### Instructions:
1. Upload this notebook to Google Colab
2. Select Runtime > Change runtime type > GPU
3. Run all cells
4. Download the generated GGUF models

# Cell 2: Code
# Check GPU availability
!nvidia-smi

import torch
print(f"\nðŸ”¥ CUDA Available: {torch.cuda.is_available()}")
if torch.cuda.is_available():
    gpu_name = torch.cuda.get_device_name(0)
    print(f"âš¡ GPU: {gpu_name}")
    if "T4" in gpu_name:
        speed_factor = "37x faster"
    elif "V100" in gpu_name:
        speed_factor = "75x faster"  
    elif "A100" in gpu_name:
        speed_factor = "151x faster"
    else:
        speed_factor = "GPU acceleration"
    print(f"ðŸŽ¯ Expected Speed: {speed_factor} than CPU baseline")

# Cell 3: Code
# Install Required Dependencies
!pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
!pip install transformers datasets peft accelerate bitsandbytes
!pip install huggingface_hub wandb tensorboard
!pip install gguf llama-cpp-python
!pip install speechbrain librosa soundfile
!pip install opencv-python Pillow numpy
!pip install pyyaml tqdm rich

# Cell 4: Code
# Clone the MeeTARA Lab repository
!git clone https://github.com/rbasina/meetara-lab.git
%cd meetara-lab

# Configure environment
import os
os.environ['CUDA_VISIBLE_DEVICES'] = '0'
os.environ['TOKENIZERS_PARALLELISM'] = 'false'
os.environ['PYTORCH_CUDA_ALLOC_CONF'] = 'max_split_size_mb:512'

# Cell 5: Code
# Run the production launcher script
!cd cloud-training && python production_launcher.py

# Cell 6: Code
# Check the generated models
!ls model-factory/trinity_gguf_models

# Cell 7: Code
# Create a zip file of the models for easy download
!zip -r trinity_gguf_models.zip model-factory/trinity_gguf_models

from google.colab import files
files.download('trinity_gguf_models.zip') 